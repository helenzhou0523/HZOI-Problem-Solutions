题目描述


      平面上有n个点（n<=100），每个点的坐标均在-10000~10000之间。其中的一些点之间有连线。若有连线，则表示可从一个点到达另一个点，即两点间有通路，通路的距离为两点间的直线距离。现在的任务是找出从一点到另一点之间的最短路径。 


输入格式


输入文件共n+m+3行，其中: 

第一行为整数n。 

第2行到第n+1行（共n行） ，每行两个整数x和y，描述了一个点的坐标。 

第n+2行为一个整数m，表示图中连线的个数。 

此后的m 行，每行描述一条连线，由两个整数i和j组成，表示第i个点和第j个点之间有连线。 

最后一行：两个整数s和t，分别表示源点和目标点 


输出


输出文件仅一行，一个实数（保留两位小数），表示从s到t的最短路径长度。 


样例输入

5
 0 0
 2 0
 2 2
 0 2
 3 1
 5 
 1 2 
 1 3 
 1 4 
 2 5 
 3 5 
 1 5

样例输出

3.41

#include<iostream>
#include<cstring>
#include<cmath>
#include<cstdio>
using namespace std;
int n,m,a,b,num;
double though[2010][2010],disc[2010],money_;
bool flag[2010];
void cini();
void work(int );
int main()
{
	cini();
    work(a);
    printf("%0.8f",100/disc[b]);
    return 0;
}
void cini()
{
	cin>>n>>m;int x,y;
	double z;
	for(int i=1;i<=m;++i)
	{
	     cin>>x>>y>>z;
	     though[x][y]=z/100;
	     though[y][x]=though[x][y];
	}
	cin>>a>>b;
}
void work(int x)
{
    double min;
	int k;
	flag[x]=true;
	for(int i=1;i<=n;++i)
	{
		if(though[x][i]!=0)
		disc[i]=1-though[x][i];
		else disc[i]=-1;
	}
	disc[x]=1 ;
	for(int j=1;j<=n-2;++j)
	{
		min=0;
		for(int i=1;i<=n;++i)
		{
			if(flag[i]==false&&disc[i]>0&&disc[i]>min)
			{
				min=disc[i];k=i;
				//cout<<k<<' '<<min<<endl;
			}
		}
		flag[k]=true;if(k==b)break;
		for(int i=1;i<=n;++i)
		{
			//cout<<i<<' '<<disc[i]<<endl;
			if(!flag[i] && though[k][i]>0&&disc[i]<disc[k]*(1-though[k][i]))
			{
				disc[i]=disc[k]*(1-though[k][i]);
				//cout<<i<<' '<<disc[i]<<endl;
			}
		}
	}
}
